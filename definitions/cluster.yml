# Copyright 2023 Cloudera, Inc.
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#     http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
#name_prefix:      "1dd"  <== failing validation with ansible template (line 54 cloudera.exe/roles/init_deployment/tasks/validate.yml )
name_prefix:        "onedd"

#//TODO Change to the correct values          
domain:             "adlab.sec.cloudera.com"  # The deployment subdomain (private) managed by the local AD server
realm:              "ADLAB.SEC.CLOUDERA.COM"  # The Kerberos realm managed by the local AD server

common_password:    "Cl0uder@P@ss1ToUpdate"         # For external services, e.g. AD, TLS
db_password:        "cloudera"
admin_password:     "Cloudera@123"  

deployment_tags:
  deployment:       "{{ name_prefix }}"
  deploy-tool:      cloudera-deploy
#ssh:
#  key_path: "definitions/"
#  public_key_id: "{{ name_prefix }}_ssh_rsa"
#  public_key_file: "id_rsa.pub"
#  private_key_file: "id_rsa"

### Teardown Controls
teardown_everything: true
teardown_cluster: "all"
teardown_preserve_parcels: true
teardown_database: false

kerberos_activated: True
encryption_activated: True
# tls_activated: True
# autotls: True

jdk_version: 11

repositories:
  ## Offical CDH 7.1.9 + CHF4
  - https://archive.cloudera.com/p/cdh7/7.1.9.6/parcels/
  ## Spark 3.3 + CHF2
  - https://archive.cloudera.com/p/spark3/3.3.7190.3/parcels/
  ## CFM 2.1.6 + SP1
  - https://archive.cloudera.com/p/cfm2/2.1.6.1000/redhat8/yum/tars/parcel
  

# Connect FreeIPA to Knox and Ranger
freeipa_activated: False

# FreeIPA client install on cluster nodes is done during pre_setup, so suppress
freeipa_enroll: no 

# Defer user and group creation to SSSD/FreeIPA registration
# Use when you dont need ansible to run "ca_server"
skip_user_group_init: no

### Cloudera Manager
# For repor override, check https://github.com/cloudera-labs/cloudera.cluster/blob/main/docs/roles/cloudera_manager/repo.md for version specific details

# The latest version of CM (as of March 11, 2024) - https://docs.cloudera.com/cdp-private-cloud-base/7.1.9/manager-release-notes/topics/chf4-cm-7113.html
cloudera_manager_version: 7.11.3.6

cloudera_manager_csds:
  - https://archive.cloudera.com/p/cfm2/2.1.3.0/redhat7/yum/tars/parcel/NIFI-1.15.2.2.1.3.0-125.jar
  - https://archive.cloudera.com/p/cfm2/2.1.3.0/redhat7/yum/tars/parcel/NIFIREGISTRY-1.15.2.2.1.3.0-125.jar

#-- Override the above remote remote repo with a local one:
#  - http://<cla-tt-2a-dp1:8080>/csd/NIFI-1.11.4.2.0.4.0-80.jar
#  - http://<cla-tt-2a-dp1:8080>/csd/NIFIREGISTRY-0.6.0.2.0.4.0-80.jar
#  - http://<cla-tt-2a-dp1:8080>/csd/FLINK-1.13.2-csa1.5.0.1-cdh7.1.7.0-551-17559653.jar

# General options
cloudera_manager_options:
  CUSTOM_BANNER_HTML: "PVC Base Lab ({{ name_prefix }})"
  SESSION_TIMEOUT: 43200
  PARCEL_DISTRIBUTE_RATE_LIMIT_KBS_PER_SECOND: 194560
  KRB_AUTH_ENABLE: "true"

# Cloudera license
#license_file: "{{ lookup('ansible.builtin.env', 'CDP_LICENSE_FILE') }}"
license_file: definitions/resources/license/onedd_2023_2024_cloudera_license.txt

# License options (this is due to a hardcoded tmp directory on the target/manager node)
license_local_tmp_path: /tmp/cloudera_license.txt

###  RDBMS
# //TODO: Change to the correct DB host
onedd_database_host: oleg-aws.vpc.cloudera.com
onedd_database_port: 5432

database_type: postgresql
database_version: 13
#database_tls: true

# Add detaisls on the external DB for CM Server
cloudera_manager_database_host: "{{ onedd_database_host }}"
cloudera_manager_database_type: "{{ database_type }}"
cloudera_manager_database_name: scm
cloudera_manager_database_user: scm
cloudera_manager_database_password:  "{{ db_password }}"

# Details for rest of DBs 
#--- Service-specific databases
onedd_database:
  HIVE:
    name: metastore
    user: hive
    #password: "{{ vault__cloudera_database_passwords.hive }}"
    password: "{{ db_password }}"
  HUE:
    name: hue
    user: hue
    password: "{{ db_password }}"
  OOZIE:
    name: oozie
    user: oozie
    password: "{{ db_password }}"
  RANGER:
    name: rangeradmin
    user: rangeradmin
    password: "{{ db_password }}"
  RANGER_KMS:
    name: rangerkms
    user: rangerkms
    password: "{{ db_password }}"  
  RMAN:
    name: rman
    user: rman
    password: "{{ db_password }}"  
  

# Active Directory (AD) realm settings
# //TODO Change Admin User creds / KDC Host details
ad_service:
  realm:                  "{{ realm }}"
  admin_user:             ov_test_cmadmin
  admin_password:         "{{ admin_password }}"
  ldap_user:              oleg@ADLAB.SEC.CLOUDERA.COM  #-- "CN=ov_test_cmadmin,OU=users,OU=oleg,OU=Eng,OU=Cloudera,DC=ADLAB,DC=SEC,DC=CLOUDERA,DC=COM"
  ldap_password:          "{{ admin_password }}"
  kdc_host:               w2k22-01.adlab.sec.cloudera.com


### Active Directory
krb5_kdc_type:            Active Directory
krb5_realm:               "{{ ad_service.realm }}"
krb5_kdc_admin_user:      "{{ ad_service.admin_user }}@{{ krb5_realm }}"  # "{{ vault__krb5_kdc_admin_account }}@{{ krb5_realm }}"
krb5_kdc_admin_password:  "{{ ad_service.admin_password }}"               # "{{ vault__krb5_kdc_admin_password }}"
krb5_enc_types:           "aes256-cts aes128-cts rc4-hmac "
krb5_kdc_host:            "{{ ad_service.kdc_host }}"
krb5_kdc_active_directory_prefix: "onedd_"
krb5_kdc_active_directory_suffix: "OU=oleg,OU=Eng,OU=Cloudera,DC=ADLAB,DC=SEC,DC=CLOUDERA,DC=COM"    #"OU=clusters,OU={{ vault__krb5_ad_ou }},OU=test-sme-demo,DC=athens,DC=cloudera,DC=com"

# //TODO: Set correct roup
###  CM External Auth - Active Directory as LDAP
cloudera_manager_external_auth:
  provider: ad_service
  external_first: no
  external_only: no
  role_mappings:
  - group: ov_group_admin
    roles: [ROLE_ADMIN]

# Set in cloudera_manager.external_auth.tasks.main:26
auth_provider: "{{ auth_providers[cloudera_manager_external_auth.provider] }}"


# //TODO: Change Base DN details.
#base_dn: "dc={{ ad_service.realm.split('.') | map('lower') | join(',dc=') }}"
#user_dn: "cn=users,cn=accounts,{{ base_dn }}"
#group_dn: "cn=groups,cn=accounts,{{ base_dn }}"
base_dn: "OU=oleg,OU=Eng,OU=Cloudera,DC=ADLAB,DC=SEC,DC=CLOUDERA,DC=COM"
user_dn: "OU=users,{{ base_dn }}"
group_dn: "OU=groups,{{ base_dn }}"

## Authentication Provider (AD Service)
auth_providers:
  ad_service:
    ldap_url: "ldap://{{ ad_service.kdc_host }}"
    ldap_base_dn: "{{ base_dn }}"
    ldap_bind_user_dn: "{{ ad_service.ldap_user }}"
    ldap_bind_password: "{{ ad_service.ldap_password }}"
    ldap_search_base:
      user: "{{ user_dn }}"
      group: "{{ group_dn }}"
    ldap_object_class:
      user: "person"
      group: "posixgroup"
    ldap_search_filter: # Used for mapping Services (Atlas, Ranger, etc.) to LDAP
      user: "(&(uid={0})(objectClass=person))"
      member: "(&(member={0})(objectClass=group))"
      group: (&(member={0})(objectclass=posixgroup)(!(cn=admins)))
    ldap_attribute: # Used for mapping CM to LDAP
     user: uid # Set to (uid={0})
     member: member # defaults to (member={0})
    ldap_attr_user_name: "uid"
    ldap_attr_group_name: "cn"
    ldap_attr_group_membership: "member"
    type: LDAP

###  CM External Auth - Active Directory as LDAP

# Settings for FreeIPA sidecar deployment
cloudera_manager_external_auth:
  provider: ad_service
  external_first: no
  external_only: no
  role_mappings:
  - group: ov_group_admin
    roles: [ROLE_ADMIN]

# Set in cloudera_manager.external_auth.tasks.main:26
#auth_provider: "{{ auth_providers[cloudera_manager_external_auth.provider] }}"


## TLS signing
#skip_ipa_signing: no # This is the default
#remote_ipa_server: "{{ groups['freeipa'] | first | default('') }}"

tls_key_password: "{{ common_password }}"
tls_keystore_password: "{{ common_password }}"
tls_truststore_password: "changeit" # DEFAULT JAVA TRUSTSTORE PASSWORD
# tls_truststore_password: "{{ common_password }}"

# Vars from legacy cloudera-Deploy
use_auto_repo_mirror: no
use_default_cluster_definition: no
use_download_mirror: no
preload_cm_parcel_repo: yes

